# Generated by Django 5.1.6 on 2025-05-26 07:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_eval', '0001_initial'),
        ('dynamic_form', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('allocated', models.DecimalField(decimal_places=2, default=0, help_text='Maximum marks for this criteria', max_digits=5)),
                ('weightage', models.DecimalField(decimal_places=2, default=0, help_text='Weightage percentage', max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Evaluation Criteria',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalEvaluationRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_status', models.CharField(choices=[('pending', 'Pending Assignment'), ('assigned', 'Assigned'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('overall_decision', models.CharField(choices=[('recommended', 'Recommended'), ('not_recommended', 'Not Recommended'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='technical_evaluations_assigned', to=settings.AUTH_USER_MODEL)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_evaluation_rounds', to='dynamic_form.formsubmission')),
            ],
            options={
                'verbose_name': 'Technical Evaluation Round',
                'verbose_name_plural': 'Technical Evaluation Rounds',
                'ordering': ['-created_at'],
                'unique_together': {('proposal',)},
            },
        ),
        migrations.CreateModel(
            name='EvaluatorAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_trl', models.IntegerField(blank=True, help_text='Current Technology Readiness Level (1-9)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('expected_trl', models.IntegerField(blank=True, help_text='Expected Technology Readiness Level after project completion (1-9)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('conflict_of_interest', models.BooleanField(default=False, help_text='Does the evaluator have a conflict of interest with this proposal?')),
                ('conflict_remarks', models.TextField(blank=True, help_text='Details about the conflict of interest if any')),
                ('is_completed', models.BooleanField(default=False)),
                ('overall_comments', models.TextField(blank=True, help_text='Overall comments about the proposal')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_evaluator_assignments', to=settings.AUTH_USER_MODEL)),
                ('evaluation_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluator_assignments', to='tech_eval.technicalevaluationround')),
            ],
            options={
                'verbose_name': 'Evaluator Assignment',
                'verbose_name_plural': 'Evaluator Assignments',
                'ordering': ['-assigned_at'],
                'unique_together': {('evaluation_round', 'evaluator')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('completed', 'Completed'), ('assigned', 'Assigned'), ('decision_made', 'Decision Made')], max_length=20)),
                ('description', models.TextField()),
                ('previous_value', models.JSONField(blank=True, null=True)),
                ('new_value', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('evaluation_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='tech_eval.technicalevaluationround')),
            ],
            options={
                'verbose_name': 'Evaluation Audit Log',
                'verbose_name_plural': 'Evaluation Audit Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TRLAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consensus_current_trl', models.IntegerField(blank=True, help_text='Consensus current TRL from all evaluators', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('consensus_expected_trl', models.IntegerField(blank=True, help_text='Consensus expected TRL from all evaluators', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('trl_variance', models.FloatField(blank=True, help_text='Variance in TRL assessments among evaluators', null=True)),
                ('trl_consensus_level', models.CharField(blank=True, choices=[('high', 'High Consensus'), ('medium', 'Medium Consensus'), ('low', 'Low Consensus')], max_length=10, null=True)),
                ('analysis_notes', models.TextField(blank=True, help_text='Additional notes about TRL analysis')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluation_round', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trl_analysis', to='tech_eval.technicalevaluationround')),
            ],
            options={
                'verbose_name': 'TRL Analysis',
                'verbose_name_plural': 'TRL Analyses',
            },
        ),
        migrations.CreateModel(
            name='CriteriaEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_given', models.DecimalField(decimal_places=2, help_text='Marks awarded for this criteria', max_digits=5)),
                ('remarks', models.TextField(blank=True, help_text="Evaluator's remarks for this criteria")),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('evaluation_criteria', models.ForeignKey(limit_choices_to={'status': 'Active', 'type': 'criteria'}, on_delete=django.db.models.deletion.CASCADE, related_name='tech_eval_criteria_evaluations', to='app_eval.evaluationitem')),
                ('evaluator_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria_evaluations', to='tech_eval.evaluatorassignment')),
            ],
            options={
                'verbose_name': 'Criteria Evaluation',
                'verbose_name_plural': 'Criteria Evaluations',
                'ordering': ['evaluation_criteria__name'],
                'unique_together': {('evaluator_assignment', 'evaluation_criteria')},
            },
        ),
    ]
